<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">file</field>
    <field name="name">README.md</field>
    <field name="url">_r_e_a_d_m_e_8md.html</field>
    <field name="keywords">README.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h.html</field>
    <field name="keywords">TestLib.h</field>
    <field name="text">Documentation of a fake API This file is for testing documentation generated by Doxygen It has no real applicable functionality 2 bndy5 December 9 2 0 2 1 0.1 MIT License Copyright c 2 0 2 1 2 bndy5 Permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the to deal in the Software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and/or sell copies of the Software and to permit persons to whom the Software is furnished to do so subject to the following conditions The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software THE SOFTWARE IS PROVIDED WITHOUT WARRANTY OF ANY KIND EXPRESS OR IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM DAMAGES OR OTHER LIABILITY WHETHER IN AN ACTION OF CONTRACT TORT OR OTHERWISE ARISING FROM OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">parentVar nonop myVar var has_code nonop parentVar myVar var1 var_1 var2 var_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00019</field>
    <field name="keywords"></field>
    <field name="text">InheritenceNamespace</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00022</field>
    <field name="keywords"></field>
    <field name="text">AbstractClass</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">AbstractClass parentVar false</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">morphMe</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">parentVar</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">has_code nonop nonop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">TestClass AbstractClass</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00070</field>
    <field name="keywords"></field>
    <field name="text">morphMe uint16_t var nonop myVar var has_code nonop parentVar myVar</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">uint8_t myVar</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00092</field>
    <field name="keywords"></field>
    <field name="text">templateNamespace</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text">TemplateClass</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text">TemplateClass T var_1 R var_2 var1 var_1 var2 var_2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text">test T check</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">test R check</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00124</field>
    <field name="keywords"></field>
    <field name="text">T var1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">TestLib.h</field>
    <field name="url">_test_lib_8h_source.html#l00126</field>
    <field name="keywords"></field>
    <field name="text">R var2 TemplateClass quickStarter TemplateClass&lt;int, bool&gt;</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">admonitions.md</field>
    <field name="url">admonitions_8md.html</field>
    <field name="keywords">admonitions.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">bug</field>
    <field name="url">bug.html</field>
    <field name="keywords"></field>
    <field name="text">Bug List Bug List Page Admonitions This is a known bug probably specific to an old version</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">InheritenceNamespace::AbstractClass</field>
    <field name="url">class_inheritence_namespace_1_1_abstract_class.html</field>
    <field name="keywords">AbstractClass</field>
    <field name="text">An Abstract class for polymorphism</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">InheritenceNamespace::AbstractClass::morphMe</field>
    <field name="args">()=0</field>
    <field name="url">class_inheritence_namespace_1_1_abstract_class.html#a0373ad3726b92feb0933cb3a7bf369ea</field>
    <field name="keywords">morphMe InheritenceNamespace::AbstractClass::morphMe InheritenceNamespace::AbstractClass morphMe InheritenceNamespace::AbstractClass::morphMe InheritenceNamespace::AbstractClass</field>
    <field name="text">A pure virtual function A pure virtual function</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">InheritenceNamespace::AbstractClass::parentVar</field>
    <field name="url">class_inheritence_namespace_1_1_abstract_class.html#a054b565d4d0ba67c5350a187ab47cbca</field>
    <field name="keywords">parentVar InheritenceNamespace::AbstractClass::parentVar InheritenceNamespace::AbstractClass parentVar InheritenceNamespace::AbstractClass::parentVar InheritenceNamespace::AbstractClass</field>
    <field name="text">A variable declared in the abstract parent class A variable declared in the abstract parent class</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">InheritenceNamespace::AbstractClass::has_code</field>
    <field name="args">(bool nonop=false)</field>
    <field name="url">class_inheritence_namespace_1_1_abstract_class.html#a8a8a4c06281f4d84820df074bd9ea507</field>
    <field name="keywords">has_code InheritenceNamespace::AbstractClass::has_code InheritenceNamespace::AbstractClass has_code InheritenceNamespace::AbstractClass::has_code InheritenceNamespace::AbstractClass</field>
    <field name="text">An inline protected function nonop A boolean that does nothing Defaults to false The same value as the nonop parameter true If nonop was passed as true false If nonop was passed as false An inline protected function</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">InheritenceNamespace::AbstractClass::AbstractClass</field>
    <field name="args">()</field>
    <field name="url">class_inheritence_namespace_1_1_abstract_class.html#ac95d04c37a6d00ef76a161166733ad02</field>
    <field name="keywords">AbstractClass InheritenceNamespace::AbstractClass::AbstractClass InheritenceNamespace::AbstractClass AbstractClass InheritenceNamespace::AbstractClass::AbstractClass InheritenceNamespace::AbstractClass</field>
    <field name="text">An empty contrustor</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">templateNamespace::TemplateClass</field>
    <field name="url">classtemplate_namespace_1_1_template_class.html</field>
    <field name="keywords">TemplateClass</field>
    <field name="text">A templated class T Some data of your choosing R Some other data of your choosing</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">templateNamespace::TemplateClass::test</field>
    <field name="args">(T check)</field>
    <field name="url">classtemplate_namespace_1_1_template_class.html#a18dab0250d3d4e4f0218517998ae5916</field>
    <field name="keywords">test templateNamespace::TemplateClass::test templateNamespace::TemplateClass&lt; T, R &gt;</field>
    <field name="text">An overloaded function check An example parameter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">templateNamespace::TemplateClass::TemplateClass</field>
    <field name="args">(T var_1, R var_2)</field>
    <field name="url">classtemplate_namespace_1_1_template_class.html#a354cfb802ba9894214d9c0cdecb4daf0</field>
    <field name="keywords">TemplateClass templateNamespace::TemplateClass::TemplateClass templateNamespace::TemplateClass&lt; T, R &gt;</field>
    <field name="text">A constructor that takes in templated data var_1 Some data to be used var_2 Some data to be used</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">templateNamespace::TemplateClass::test</field>
    <field name="args">(R check)</field>
    <field name="url">classtemplate_namespace_1_1_template_class.html#a467eb9e456d5920e041f700b076d7e3c</field>
    <field name="keywords">test templateNamespace::TemplateClass::test templateNamespace::TemplateClass&lt; T, R &gt;</field>
    <field name="text">An overloaded function check An example parameter</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">templateNamespace::TemplateClass::var2</field>
    <field name="url">classtemplate_namespace_1_1_template_class.html#a970c8061f66cd26fe3e794da444eaf47</field>
    <field name="keywords">var2 templateNamespace::TemplateClass::var2 templateNamespace::TemplateClass&lt; T, R &gt;</field>
    <field name="text">Some encapsulated data</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">templateNamespace::TemplateClass::var1</field>
    <field name="url">classtemplate_namespace_1_1_template_class.html#ae4cc7bc5b249245c7df8d672f8049d94</field>
    <field name="keywords">var1 templateNamespace::TemplateClass::var1 templateNamespace::TemplateClass&lt; T, R &gt;</field>
    <field name="text">Some encapsulated data</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">deprecated</field>
    <field name="url">deprecated.html</field>
    <field name="keywords"></field>
    <field name="text">Deprecated List Deprecated List Page Admonitions This only shows if the GENERATE_DEPRECATED_LIST tag is enabled in the Doxyfile</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">Doxygen Materialized This repo contains some of my customizations for adapting Doxygen s HTML output using some Material Design If your project is already using customized header footer and layout files then you might just consider this repository an inspiration to copy from since this repository carries an MIT License Note that material icons have been embedded via CSS and they are subject to Google s Apache License v2 The material icons used by this theme are not distributed with this theme s assets rather they are fetched by the browser when the generated HTML is loaded The distributed JS dependencies also use a MIT license namely the materialize-css framework and clipboard.js These distributed minified scripts have not been altered they are just served with the generated html for performance and connectivity reasons This theme has been tested and developed using doxygen v1.9.1 and it is intended to be backwards compatible with older versions of doxygen However doxygen s generated HTML output tends to differ significantly without notice meaning HTML changes do no correspond to semantic versioning Simply copy the doxygen-materialized folder from this repo s release assets into a doxygen project The destination of this folder can be anywhere within the Doxyfile s INPUT path but I recommend keeping all documentation related files in a separate folder like Modify your project s Doxyfile This can be done in 1 of 2 ways Add the following line to your project s doxyfile preferably at the end of the file Change or add the following lines to your project s Doxyfile Keep in mind that the paths specified should be relative to the directory from which doxygen is executed re-styled admonitions includes appropriate icons in admonitions titles integrated support for dark theme with toggle switch that works with the user s OS settings added button which appears at 3 6 0 px approximately 5 scroll wheel from the top of the page This is made compatible with and without GENERATE_TREEVIEW enabled add a favicon in doxygen_overrides/header.html which can easily be change by replacing/changing the doxygen_overrides/favicon.ico file added copy-to-clipboard button for all code blocks which have been re-styled in the process moved site indexing tabs into the slide out nav menu toggled via the navbar s hamburger button This feature requires DISABLE_INDEX set to NO in the project s Doxyfile</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">math.md</field>
    <field name="url">math_8md.html</field>
    <field name="keywords">math.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">md_test_src_admonitions</field>
    <field name="url">md_test_src_admonitions.html</field>
    <field name="keywords"></field>
    <field name="text">Admonitions Admonitions This is a blockquote With multiple lines and an inline_code syntax This only shows if the GENERATE_TODO_LIST tag is enabled in the Doxyfile This only shows if the GENERATE_DEPRECATED_LIST tag is enabled in the Doxyfile This seems to have extremely specific usage Info about pre-conditional context Info about post-conditional context Info about a test condition This is a known bug probably specific to an old version This is a warning This is a note More test documentation is found in the TestLib.h The see sa and remark remarks commands now have admonitished styles instead of bland data description text</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">md_test_src_math</field>
    <field name="url">md_test_src_math.html</field>
    <field name="keywords"></field>
    <field name="text">Math Math These snippets are taken from the doxygen manual The distance between and is Review the doxygen manual s page for more details</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">md_test_src_tables</field>
    <field name="url">md_test_src_tables.html</field>
    <field name="keywords"></field>
    <field name="text">Tables Tables Here is an example First Header Second Header Content Cell Content Cell Content Cell Content Cell Column alignment can be controlled via one or two colons at the header separator line Right Center Left 1 0 1 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 Additionally column and row spans are supported Using a caret in a cell indicates that the cell above should span rows Sequences of carets may be used for any number of row spans For example Right Center Left 1 0 1 0 1 0 1 0 0 0 1 0 0 0 Column spans are supported by means of directly adjacent vertical bars Each additional vertical bar indicates an additional column to be spanned To put it another way a single vertical bar indicates a single column span two vertical bars indicates a 2 columns span and so on For example Right Center Left 1 0 1 0 1 0 1 0 0 0 Here is an example of a complex table Complex table Column 1 Column 2 Column 3 cell row 1 2 col 1 cell row 1 col 2 cell row 1 col 3 cell row 2 3 col 2 cell row 2 col 3 cell row 3 col 1 cell row 3 4 col 3 cell row 4 col 1 2 cell row 5 col 1 cell row 5 col 2 3 cell row 6 7 col 1 2 cell row 6 col 3 cell row 7 col 3 cell row 8 col 1 cell row 8 col 2 Inner cell row 1 col 1 Inner cell row 1 col 2 Inner cell row 2 col 1 Inner cell row 2 col 2 cell row 8 col 3 Item 1 Item 2</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">InheritenceNamespace</field>
    <field name="url">namespace_inheritence_namespace.html</field>
    <field name="keywords">InheritenceNamespace</field>
    <field name="text">A namespace just for our inheritence example</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">templateNamespace</field>
    <field name="url">namespacetemplate_namespace.html</field>
    <field name="keywords">templateNamespace</field>
    <field name="text">A namespace just for our template example</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">templateNamespace::quickStarter</field>
    <field name="url">namespacetemplate_namespace.html#a6c47c8a13a01b685defd39214746eacc</field>
    <field name="keywords">quickStarter templateNamespace::quickStarter templateNamespace quickStarter templateNamespace::quickStarter templateNamespace</field>
    <field name="text">A helpful specialization instantiated for getting the app developed quickly A helpful specialization instantiated for getting the app developed quickly In this example this object specializes using int(1) bool(0)</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">InheritenceNamespace::TestClass</field>
    <field name="url">struct_inheritence_namespace_1_1_test_class.html</field>
    <field name="keywords">TestClass</field>
    <field name="text">A derivative of AbstractClass</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">InheritenceNamespace::TestClass::morphMe</field>
    <field name="args">(uint16_t var, bool nonop)</field>
    <field name="url">struct_inheritence_namespace_1_1_test_class.html#a40d9e4cc0f4214150620c14a65ddd224</field>
    <field name="keywords">morphMe InheritenceNamespace::TestClass::morphMe InheritenceNamespace::TestClass</field>
    <field name="text">A usable function var Some number parameter nonop Some boolean parameter</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">InheritenceNamespace::TestClass::myVar</field>
    <field name="url">struct_inheritence_namespace_1_1_test_class.html#a4f3be9e96fd1afb6c268e847e916ea4d</field>
    <field name="keywords">myVar InheritenceNamespace::TestClass::myVar InheritenceNamespace::TestClass</field>
    <field name="text">A private variable specific to the child class</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">tables.md</field>
    <field name="url">tables_8md.html</field>
    <field name="keywords">tables.md</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">test</field>
    <field name="url">test.html</field>
    <field name="keywords"></field>
    <field name="text">Test List Test List Page Admonitions Info about a test condition</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">todo</field>
    <field name="url">todo.html</field>
    <field name="keywords"></field>
    <field name="text">Todo List Todo List Page Admonitions This only shows if the GENERATE_TODO_LIST tag is enabled in the Doxyfile</field>
  </doc>
</add>
